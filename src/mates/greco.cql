

cql()
â¬“{btm mate
Q -> k

square all x in _ <- k
       (B -> x) or (Q -> x)}


// Greco's mate - basic pattern.
//cql()  mate flipcolor flipvertical {
  // Place the king and friendly obstructing pawn.
  //kh7-8  pg7
  // The bishop guards the empty flight square on the back rank.
  //B attacks _g8
  // A queen or rook on the h-file effects the mate.
  //[QR]h1-5 attacks k
  // If the king is on h7, the g6 flight is guarded by the Q or B.
  //if k attacks _g6 then [QB] attacks g6
}
